security:
    encoders:
        App\Entity\Admin:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_db:
            entity:
                class: App\Entity\Admin
                property: username
    firewalls:
        main:
#            Configuration d'après le tuto de la doc symfony
            anonymous: ~
            logout: ~
            provider: in_db

            guard:
                authenticators:
                    - App\Security\TokenAuthenticator

#            pattern: ^/admin
#            provider: in_db
#            anonymous: ~
#
#            login_path: security_admin_login
#            check_path: security_admin_login
#
#            logout:
#                path: security_admin_login
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
                # target: Route une fois déconnecté

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/test/unauthorize, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
